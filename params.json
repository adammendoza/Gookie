{"name":"Gookie","tagline":"Lightweight, configurable GitHub webhook server.","body":"Gookie\r\n======\r\n\r\nSmall and highly configurable node server for handling your [GitHub Webhooks](https://developer.github.com/webhooks/).\r\n\r\nInspired by [GitHub Auto Deploy](https://github.com/logsol/Github-Auto-Deploy) which was written in Python and designed only for pull requests. Gookie is written in Node.js and is just as friendly; but it prints deploy script output and is more configurable. It was designed to solve one or two of the problems we ran into at the [eth0 hackathon](https://github.com/hoxxep/eth0-Hackathon), such as mentioning in the terminal that a ping event occurred and showing errors during git pull/our deploy script.\r\n\r\nGetting Started\r\n---------------\r\n\r\n1. Download Gookie or clone the repo (`git clone https://github.com/hoxxep/Gookie`).\r\n2. Edit `config.json` by setting the port for your webhook and configuring a repository.\r\n3. Run `npm install` to install local dependencies.\r\n4. Run `node Gookie.js` to start the server.\r\n5. Test your Gookie server is running by visiting your ip:port in a browser.\r\n    - *Troubleshooting:* you may have to open ports if your router/firewall is restricting your chosen port. You can use [ngrok](https://ngrok.com/) as a temporary solution.\r\n6. Configure your [webhook](https://developer.github.com/webhooks/) by visiting your repo settings on GitHub.\r\n    - Enter the url of your machine and the port, and specify content type as application/json.\r\n\r\nConfiguration\r\n-------------\r\n\r\n### Command-line args\r\n\r\n`-q` or `--quiet`: Reduce the amount of [console] output from Gookie. They still print deploy script output (in case an error occurs).\r\n`-v` or `--verbose`: Show user pushing to which repo and some other extra output [in both gookie.log and console output].\r\n\r\n### config.json\r\n\r\nExample `config.json`:\r\n\r\n```JSON\r\n{\r\n  \"port\": 8001,\r\n  \"repositories\": [\r\n    {\r\n      \"url\": \"https://github.com/hoxxep/Gookie\",\r\n      \"path\": \"~/Documents/Projects/Gookie\",\r\n      \"deploy\": \"sh pull-and-build.sh\"\r\n    }, {\r\n      \"url\": \"https://github.com/hoxxep/Snarl\",\r\n      \"path\": \"~/Documents/Projects/Snarl\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nIf left blank, the `port` will default to 8001; and any repository options/properties which have been left out default to the following:\r\n\r\n```JSON\r\n{\r\n  \"url\": \"https://github.com/hoxxep/Gookie\",\r\n  \"path\": \"~/Documents/Projects/Gookie\",\r\n  \"deploy\": \"git pull\",\r\n  \"secret\": \"\"\r\n}\r\n```\r\n\r\nThis means if you don't have a custom `deploy` script/command, it will default to `git pull`, and the secret will default to blank.\r\n\r\nSample Output\r\n-------------\r\n\r\nSample output which Gookie outputs to terminal window after the following actions:\r\n\r\n1. Visited machine URL in browser.\r\n2. Pushed to repo [hoxxep/Snarl](https://github.com/hoxxep/Snarl)\r\n    - This then triggers the `cd \"directory\" && deploy` command\r\n    - Which then shows the output of `git pull`\r\n\r\n```shell\r\n [02:33:02] Server started on port 8001\r\n [02:35:08] GET request sent from 1.2.3.4\r\n [02:33:15] user hoxxep pushed to https://github.com/hoxxep/Snarl\r\n [02:33:15] cd \"/Users/liam/Documents/Projects/Snarl\" && git pull\r\nAlready up-to-date.\r\n\r\n [02:33:16] end of deploy output\r\n```\r\n\r\nTODOs\r\n-----\r\n\r\n- Include support for multiple webhooks on the same repo and different actions for each\r\n    - Would require unique urls for each hook/event as GitHub doesn't send what the event was in the payload. Will need to look at a neat way to do this in Express.js\r\n- Add a custom terminal message for ping event\r\n- Add support for repo/webhook secret\r\n- Daemon/service mode?\r\n\r\n---\r\n\r\nCreated by Liam Gray (@hoxxep).\r\nReleased under the MIT License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}